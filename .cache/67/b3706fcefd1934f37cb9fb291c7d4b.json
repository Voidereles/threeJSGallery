{"id":"shaders/vertex.glsl","dependencies":[{"name":"/mnt/c/Users/voide/OneDrive/Documents/GitHub/threeJSGallery/package.json","includedInParent":true,"mtime":1605723373437}],"generated":{"js":"module.exports = \"#define GLSLIFY 1\\nuniform float time;\\nvarying vec2 vUv;\\nvarying vec3 vPosition;\\nfloat PI = 3.141592653;\\nuniform float distanceFromCenter;\\nuniform vec2 pixels;\\n\\nvoid main() {\\n    // vUv = (uv - vec2(0.5))*0.7 + vec2(0.5); //no zooming\\n    vUv = (uv - vec2(0.6))*(0.9 - 0.1*distanceFromCenter*(2. - distanceFromCenter)) + vec2(0.5);\\n    vec3 pos = position;\\n\\n// pos.x -= sin(PI.uv.x) * 0.01;\\npos.y += sin(PI*uv.x) * 0.02;\\npos.z -= sin(PI*uv.x) * 0.1;\\n//bending\\n\\n    pos.y += sin(time*0.3)*0.02;\\n    vUv.y += sin(time*0.3)*0.02;\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\\n}\";"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":1,"column":0},"source":"shaders/vertex.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":6},"source":"shaders/vertex.glsl","original":{"line":1,"column":6}},{"name":"exports","generated":{"line":1,"column":7},"source":"shaders/vertex.glsl","original":{"line":1,"column":7}},{"generated":{"line":1,"column":14},"source":"shaders/vertex.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"shaders/vertex.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":638},"source":"shaders/vertex.glsl","original":{"line":1,"column":0}}],"sources":{"shaders/vertex.glsl":"module.exports=\"#define GLSLIFY 1\\nuniform float time;\\nvarying vec2 vUv;\\nvarying vec3 vPosition;\\nfloat PI = 3.141592653;\\nuniform float distanceFromCenter;\\nuniform vec2 pixels;\\n\\nvoid main() {\\n    // vUv = (uv - vec2(0.5))*0.7 + vec2(0.5); //no zooming\\n    vUv = (uv - vec2(0.6))*(0.9 - 0.1*distanceFromCenter*(2. - distanceFromCenter)) + vec2(0.5);\\n    vec3 pos = position;\\n\\n// pos.x -= sin(PI.uv.x) * 0.01;\\npos.y += sin(PI*uv.x) * 0.02;\\npos.z -= sin(PI*uv.x) * 0.1;\\n//bending\\n\\n    pos.y += sin(time*0.3)*0.02;\\n    vUv.y += sin(time*0.3)*0.02;\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\\n}\";"},"lineCount":null}},"error":null,"hash":"271e0bedd85945ff84aee5c8441c1ca9","cacheData":{"env":{}}}